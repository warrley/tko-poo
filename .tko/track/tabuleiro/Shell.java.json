{
    "patches": [
        {
            "label": "2025-08-25_14-40-42",
            "content": "@@ -733,24 +733,27 @@\n             \n+ //\n  var pos = I\n@@ -781,44 +781,8 @@\n %5D);%0A\n-                board.addTrap(pos);%0A\n     \n@@ -845,24 +845,27 @@\n             \n+ //\n  var value =\n@@ -895,47 +895,8 @@\n %5D);%0A\n-                board.rollDice(value);%0A\n     \n@@ -1440,123 +1440,8 @@\n s);%0A\n-            for(int i = 0; i %3C nPlayers; i++) %7B%0A                this.players.add(new Player(i + 1));%0A            %7D%0A\n     \n@@ -1551,22 +1551,41 @@\n his.\n-running = true\n+players = new ArrayList%3CPlayer%3E()\n ;%0A  \n@@ -1738,106 +1738,96 @@\n     \n-str += this.players.get(i).toString() + %22: %22;%0A                for(int j = 0; j %3C boardSize; j++) %7B\n+for(int j = 0; j %3C boardSize; j++) %7B%0A                    str += %22player%22 + (i+1) + %22: %22;\n %0A   \n@@ -1848,17 +1848,17 @@\n    if(j \n-!\n+=\n = this.p\n@@ -2148,46 +2148,8 @@\n ) %7B%0A\n-                boolean find = false;%0A\n     \n@@ -2179,36 +2179,25 @@\n  0; j %3C \n-this.trapList.s\n+boardS\n ize\n-()\n ; j++) %7B\n@@ -2221,29 +2221,24 @@\n     if(i == \n-this.\n trapList.get\n@@ -2272,19 +2272,18 @@\n     \n-find = true\n+str += %22x%22\n ;%0A  \n@@ -2306,55 +2306,21 @@\n   %7D \n+else %7B\n %0A      \n-          %7D%0A%0A                if(find) %7B%0A\n     \n@@ -2329,34 +2329,32 @@\n             \n-  \n str += %22\n x%22;%0A        \n@@ -2333,33 +2333,33 @@\n         str += %22\n-x\n+.\n %22;%0A             \n@@ -2365,48 +2365,13 @@\n     \n-%7D else %7B%0A                    str += %22.%22;\n+    %7D\n %0A   \n@@ -2490,31 +2490,8 @@\n     \n-this.trapList.add(pos);\n %0A   \n@@ -2510,33 +2510,8 @@\n    %0A\n-        int current = 0;%0A\n     \n@@ -2552,1525 +2552,8 @@\n ) %7B%0A\n-            if(!this.running) %7B%0A                System.out.println(%22game is over%22);%0A            %7D else if(!this.players.get(current).free && value %25 2 != 0) %7B%0A                System.out.println(this.players.get(current).toString() + %22 continua preso%22);%0A            %7D else if(!this.players.get(current).free && value %25 2 == 0) %7B%0A                System.out.println(this.players.get(current).toString() + %22 se libertou%22);%0A                this.players.get(current).free = true;%0A            %7D else %7B%0A                this.players.get(current).setPos(this.players.get(current).pos + value);%0A%0A                System.out.println(this.players.get(current).toString() + %22 andou para %22 + this.players.get(current).pos);%0A                %0A                for(int i = 0; i %3C this.trapList.size(); i++) %7B%0A                    if(this.players.get(current).pos == this.trapList.get(i)) %7B%0A                        System.out.println(this.players.get(current).toString() + %22 caiu em uma armadilha%22);%0A                        this.players.get(current).setFree(false);%0A                        break;%0A                    %7D%0A                %7D%0A                %0A                if(this.players.get(current).pos %3E= boardSize) %7B%0A                    System.out.println(this.players.get(current).toString() + %22 ganhou%22);%0A                    this.running = false;%0A                %7D%0A            %7D%0A            %0A            if(current + 1 %3E= this.players.size()) %7B%0A                current = 0;%0A            %7D else %7B%0A                current++;%0A            %7D\n %0A   \n@@ -2943,28 +2943,9 @@\n rn %22\n-player%22 + this.label\n+%22\n ;%0A  \n",
            "lines": "128"
        },
        {
            "label": "2025-08-25_15-57-45",
            "content": "@@ -1979,17 +1979,16 @@\n = 0; j %3C\n-=\n  boardSi\n@@ -2300,17 +2300,16 @@\n = 0; i %3C\n-=\n  boardSi\n",
            "lines": "169"
        },
        {
            "label": "2025-08-25_15-58-38",
            "content": "@@ -3488,234 +3488,8 @@\n );%0A%0A\n-                if(this.players.get(current).pos %3E= boardSize) %7B%0A                    System.out.println(this.players.get(current).toString() + %22 ganhou%22);%0A                    this.running = false;%0A                %7D else %7B%0A    \n     \n@@ -3607,34 +3607,16 @@\n ).pos);%0A\n-                %7D%0A\n         \n@@ -4023,32 +4023,247 @@\n                %0A\n+                if(this.players.get(current).pos %3E= boardSize) %7B%0A                    System.out.println(this.players.get(current).toString() + %22 ganhou%22);%0A                    this.running = false;%0A                %7D%0A\n             %7D%0A  \n",
            "lines": "169"
        },
        {
            "label": "2025-08-25_16-00-08",
            "content": "@@ -3643,80 +3643,8 @@\n %22);%0A\n-                    this.players.get(current).pos = this.boardSize - 1;%0A\n     \n",
            "lines": "170"
        },
        {
            "label": "2025-08-25_16-01-05",
            "content": "@@ -3697,32 +3697,36 @@\n = this.boardSize\n+ - 1\n ;%0A              \n",
            "lines": "171"
        },
        {
            "label": "2025-08-25_16-01-18",
            "content": "import java.util.*;\n\n// }\n\npublic class Shell {\n    private static Scanner scanner = new Scanner(System.in);\n    public static void main(String[] args) {\n        Board board = new Board(0, 0);\n\n        while (true) {\n            String line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n            \n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"init\")) {\n                var nPlayers = Integer.parseInt(par[1]);\n                var size = Integer.parseInt(par[2]);\n                board = new Board(nPlayers, size);\n            }\n            else if (cmd.equals(\"addTrap\")) {\n                var pos = Integer.parseInt(par[1]);\n                board.addTrap(pos);\n            }\n            else if (cmd.equals(\"roll\")) {\n                var value = Integer.parseInt(par[1]);\n                board.rollDice(value);\n            }\n            else if (cmd.equals(\"show\")) {\n                System.out.println(board.toString());\n            }\n            else {\n                System.out.println(\"invalid command\");\n            }\n        }\n        scanner.close();\n\n    }\n    static class Board {\n        private ArrayList<Integer> trapList;\n        private ArrayList<Player> players;\n        private boolean running;\n        private int boardSize;\n\n        public Board(int nPlayers, int boardSize) {\n            this.players = new ArrayList<Player>(nPlayers);\n            for(int i = 0; i < nPlayers; i++) {\n                this.players.add(new Player(i + 1));\n            }\n            this.boardSize = boardSize;\n            this.trapList = new ArrayList<Integer>();\n            this.running = true;\n        } \n\n        public String toString() {\n            String str = \"\";\n\n            for(int i = 0; i < this.players.size(); i++) {\n                str += this.players.get(i).toString() + \": \";\n                for(int j = 0; j <= boardSize; j++) {\n                    if(j != this.players.get(i).pos) {\n                        str += \".\";\n                    } else {\n                        str += i+1;\n                    }\n                }\n                str += \"\\n\";\n            }\n\n            str += \"traps__: \";\n            for(int i = 0; i <= boardSize; i++) {\n                boolean find = false;\n                for(int j = 0; j < this.trapList.size(); j++) {\n                    if(i == this.trapList.get(j)) {\n                        find = true;\n                    } \n                }\n\n                if(find) {\n                    str += \"x\";\n                } else {\n                    str += \".\";\n                }\n            }\n\n            return str;\n        }\n\n        public void addTrap(int pos) {\n            this.trapList.add(pos);\n        }\n        \n        int current = 0;\n        public void rollDice(int value) {\n            if(!this.running) {\n                System.out.println(\"game is over\");\n            } else if(!this.players.get(current).free && value % 2 != 0) {\n                System.out.println(this.players.get(current).toString() + \" continua preso\");\n            } else if(!this.players.get(current).free && value % 2 == 0) {\n                System.out.println(this.players.get(current).toString() + \" se libertou\");\n                this.players.get(current).free = true;\n            } else {\n                this.players.get(current).setPos(this.players.get(current).pos + value);\n\n                if(this.players.get(current).pos >= boardSize) {\n                    System.out.println(this.players.get(current).toString() + \" ganhou\");\n                    this.players.get(current).pos = this.boardSize;\n                    this.running = false;\n                } else {\n                    System.out.println(this.players.get(current).toString() + \" andou para \" + this.players.get(current).pos);\n                }\n                \n                for(int i = 0; i < this.trapList.size(); i++) {\n                    if(this.players.get(current).pos == this.trapList.get(i)) {\n                        System.out.println(this.players.get(current).toString() + \" caiu em uma armadilha\");\n                        this.players.get(current).setFree(false);\n                        break;\n                    }\n                }\n                \n            }\n            \n            if(current + 1 >= this.players.size()) {\n                current = 0;\n            } else {\n                current++;\n            }\n        }\n    }\n\n    static class Player {\n        private int label;\n        private int pos;\n        private boolean free;\n\n        public Player(int label) {\n            this.label = label;\n            this.pos = 0;\n            this.free = true;\n        }\n\n        public boolean isFree() {\n            return this.free;\n        }\n\n        public String toString() {\n            return \"player\" + this.label;\n        }\n\n        public int getLabel() {\n            return this.label;\n        }\n\n        public int getPos() {\n            return this.pos;\n        }\n        \n        public void setPos(int pos) {\n            this.pos = pos;\n        }\n\n        public void setFree(boolean free) {\n            this.free = free;\n        }\n    }\n}\n",
            "lines": "171"
        }
    ]
}