{
    "patches": [
        {
            "label": "2025-08-31_21-43-32",
            "content": "@@ -498,58 +498,8 @@\n ) %7B%0A\n-                System.out.println(vm.toString());\n %0A   \n@@ -536,24 +536,25 @@\n (%22init%22)) %7B%0A\n+ \n             \n@@ -599,32 +599,33 @@\n (argsSplit%5B1%5D);%0A\n+ \n                 \n@@ -716,32 +716,35 @@\n %0A               \n+ //\n  int indice = In\n@@ -777,46 +777,8 @@\n %5D);%0A\n-                vm.clearSlot(indice);%0A\n     \n@@ -842,89 +842,57 @@\n     \n-float value = Float.parseFloat(argsSplit%5B1%5D);%0A                vm.insertCash(value\n+// double value = Double.parseDouble(argsSplit%5B1%5D\n );%0A \n@@ -945,32 +945,35 @@\n %0A               \n+ //\n  int ind = Integ\n@@ -1003,556 +1003,8 @@\n %5D);%0A\n-%0A                if(ind %3E= vm.slots.size()) %7B%0A                    System.out.println(%22fail: indice nao existe%22);%0A                %7D else if(vm.getCash() %3C vm.slots.get(ind).price) %7B%0A                    System.out.println(%22fail: saldo insuficiente%22);%0A                %7D else if(vm.slots.get(ind).quantity %3C= 0) %7B%0A                    System.out.println(%22fail: espiral sem produtos%22);%0A                %7D else %7B%0A                    System.out.printf(%22voce comprou um %25s%5Cn%22, vm.slots.get(ind).name);%0A                    vm.buyItem(ind);%0A                %7D%0A%0A\n     \n@@ -1054,24 +1054,27 @@\n             \n+ //\n  int indice \n@@ -1114,32 +1114,35 @@\n %0A               \n+ //\n  String nome = a\n@@ -1161,32 +1161,35 @@\n %0A               \n+ //\n  int qtd = Integ\n@@ -1235,498 +1235,159 @@\n     \n-float preco = Float.parseFloat(argsSplit%5B4%5D);%0A%0A                if(indice %3E= vm.slots.size()) %7B%0A                    System.out.println(%22fail: indice nao existe%22);%0A                %7D else %7B%0A                    Slot slot = new Slot(nome, preco, qtd);%0A                    vm.setSlot(indice, slot);%0A                %7D%0A                %0A            %7D else if (cmd.equals(%22troco%22)) %7B%0A                float change = vm.withdrawCash();%0A                System.out.printf(%22voce recebeu %25.2f RS%5Cn%22, change\n+// double preco = Double.parseDouble(argsSplit%5B4%5D);%0A            %7D else if (cmd.equals(%22troco%22)) %7B%0A                // double troco = machine.pedirTroco(\n );%0A \n@@ -2144,32 +2144,36 @@\n  i = 0; i %3C \n-capacity\n+slots.size()\n ; i++) %7B%0A   \n@@ -2276,600 +2276,10 @@\n urn \n-sb.toString();%0A        %7D%0A%0A        public void buyItem(int index) %7B%0A            Slot slot = slots.get(index);%0A            slot.setQuantity(slot.getQuantity() - 1);%0A            slots.set(index, slot);%0A%0A            cash -= slot.getPrice();%0A        %7D%0A%0A        public float withdrawCash() %7B%0A            float cashtmp = cash;%0A            profit += cash;%0A            cash = 0;%0A            return cashtmp;%0A        %7D%0A%0A        public void insertCash(float cash) %7B%0A            this.cash += cash;%0A        %7D%0A%0A        public void clearSlot(int index) %7B%0A            slots.set(index, new Slot(%22empty%22, 0, 0))\n+%22%22\n ;%0A  \n@@ -2420,43 +2420,8 @@\n ) %7B%0A\n-            slots.set(index, slot);\n %0A   \n@@ -2970,17 +2970,16 @@\n ce + %22RS\n-%5D\n %22;%0A     \n",
            "lines": "125"
        },
        {
            "label": "2025-08-31_22-15-34",
            "content": "@@ -4573,42 +4573,18 @@\n  %22 +\n- String.format(%22%25.2f%22,\n  price\n-)\n  + %22\n- \n RS%5D%22\n",
            "lines": "171"
        },
        {
            "label": "2025-08-31_22-16-56",
            "content": "@@ -2340,27 +2340,16 @@\n .printf(\n-Locale.US, \n %22voce re\n@@ -4588,19 +4588,8 @@\n mat(\n-Locale.US, \n %22%25.2\n",
            "lines": "171"
        },
        {
            "label": "2025-08-31_22-18-37",
            "content": "@@ -4535,201 +4535,22 @@\n     \n-StringBuilder sb = new StringBuilder();%0A            sb.append(%22%5B%22);%0A            for(int i = 0; i %3C 8 - name.length(); i++) %7B%0A                sb.append(%22 %22);%0A            %7D%0A            sb.append(\n+return %22%5B %22 + \n name\n@@ -4633,44 +4633,8 @@\n RS%5D%22\n-);%0A%0A            return sb.toString()\n ;%0A  \n",
            "lines": "171"
        },
        {
            "label": "2025-08-31_22-23-43",
            "content": "@@ -3106,46 +3106,13 @@\n  %22 +\n- String.format(Locale.US, %22.2f%22,\n  cash\n-)\n  + %22\n",
            "lines": "178"
        },
        {
            "label": "2025-08-31_22-24-50",
            "content": "@@ -3125,25 +3125,24 @@\n Locale.US, %22\n-%25\n .2f%22, cash) \n",
            "lines": "178"
        },
        {
            "label": "2025-08-31_22-25-29",
            "content": "@@ -3263,59 +3263,11 @@\n ng()\n-);%0A                if(i != capacity - 1) sb.append(\n+ + \n %22%5Cn%22\n",
            "lines": "178"
        },
        {
            "label": "2025-08-31_22-26-51",
            "content": "import java.util.*;\n\npublic class Shell {\n\n    static Scanner scanner = new Scanner(System.in);\n    public static void main(String[] args) {\n        VendingMachine vm = new VendingMachine(0);\n        while (true) {\n            String line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            String[] argsSplit = line.split(\" \");\n            String cmd = argsSplit[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            } else if (cmd.equals(\"show\")) {\n                System.out.println(vm.toString());\n            } else if (cmd.equals(\"init\")) {\n                int qtdEspirais = Integer.parseInt(argsSplit[1]);\n                vm = new VendingMachine(qtdEspirais);\n            } else if (cmd.equals(\"limpar\")) {\n                int indice = Integer.parseInt(argsSplit[1]);\n                vm.clearSlot(indice);\n            } else if (cmd.equals(\"dinheiro\")) {\n                float value = Float.parseFloat(argsSplit[1]);\n                vm.insertCash(value);\n            } else if (cmd.equals(\"comprar\")) {\n                int ind = Integer.parseInt(argsSplit[1]);\n\n                if(ind >= vm.slots.size()) {\n                    System.out.println(\"fail: indice nao existe\");\n                } else if(vm.getCash() < vm.slots.get(ind).price) {\n                    System.out.println(\"fail: saldo insuficiente\");\n                } else if(vm.slots.get(ind).quantity <= 0) {\n                    System.out.println(\"fail: espiral sem produtos\");\n                } else {\n                    System.out.printf(\"voce comprou um %s\\n\", vm.slots.get(ind).name);\n                    vm.buyItem(ind);\n                }\n\n            } else if (cmd.equals(\"set\")) {\n                int indice = Integer.parseInt(argsSplit[1]);\n                String nome = argsSplit[2];\n                int qtd = Integer.parseInt(argsSplit[3]);\n                float preco = Float.parseFloat(argsSplit[4]);\n\n                if(indice >= vm.slots.size()) {\n                    System.out.println(\"fail: indice nao existe\");\n                } else {\n                    Slot slot = new Slot(nome, preco, qtd);\n                    vm.setSlot(indice, slot);\n                }\n                \n            } else if (cmd.equals(\"troco\")) {\n                float change = vm.withdrawCash();\n                System.out.printf(Locale.US, \"voce recebeu %.2f RS\\n\", change);\n            } else {\n                System.out.println(\"comando invalido\");\n            }\n        }\n    }\n\n    static class VendingMachine {\n        private ArrayList<Slot> slots;\n        private float profit;\n        private float cash;\n        private int capacity;\n\n        public VendingMachine(int capacity) {\n            this.slots = new ArrayList<Slot>(capacity);\n            this.capacity = capacity;\n            this.cash = 0;\n            for(int i = 0; i < capacity; i++) {\n                Slot slot = new Slot(\"empty\", 0, 0);\n                slots.add(slot);\n            }\n        }\n\n        public String toString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"saldo: \" + String.format(Locale.US, \"%.2f\", cash) + \"\\n\");\n\n            for(int i = 0; i < capacity; i++) {\n                sb.append(i + \" \" + slots.get(i).toString());\n                if(i != capacity - 1) sb.append(\"\\n\");\n            }\n\n            return sb.toString();\n        }\n\n        public void buyItem(int index) {\n            Slot slot = slots.get(index);\n            slot.setQuantity(slot.getQuantity() - 1);\n            slots.set(index, slot);\n\n            cash -= slot.getPrice();\n        }\n\n        public float withdrawCash() {\n            float cashtmp = cash;\n            profit += cash;\n            cash = 0;\n            return cashtmp;\n        }\n\n        public void insertCash(float cash) {\n            this.cash += cash;\n        }\n\n        public void clearSlot(int index) {\n            slots.set(index, new Slot(\"empty\", 0, 0));\n        }\n\n        public Slot getSlot(int index) {\n            return null;\n        }\n\n        public void setSlot(int index, Slot slot) {\n            slots.set(index, slot);\n        }\n\n        public float getCash() {\n            return cash;\n        }\n\n        public float getProfit() {\n            return profit;\n        }\n    }\n\n    static class Slot {\n        private String name;\n        private float price;\n        private int quantity;\n\n        public Slot(String name, float price, int quantity) {\n            this.name = name;\n            this.price = price;\n            this.quantity = quantity;\n        }\n\n        public String toString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"[\");\n            for(int i = 0; i < 8 - name.length(); i++) {\n                sb.append(\" \");\n            }\n            sb.append(name + \" : \" + quantity + \" U : \" + String.format(Locale.US, \"%.2f\", price) + \" RS]\");\n\n            return sb.toString();\n        }\n\n        public String getName() {\n            return name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n\n        public float getPrice() {\n            return price;\n        }\n\n        public void setPrice(float price) {\n            this.price = price;\n        }\n\n        public int getQuantity() {\n            return quantity;\n        }\n\n        public void setQuantity(int quantity) {\n            this.quantity = quantity;\n        }\n        \n    }\n}\n",
            "lines": "179"
        }
    ]
}