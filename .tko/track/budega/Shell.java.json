{
    "patches": [
        {
            "label": "2025-08-24_21-23-50",
            "content": "@@ -705,24 +705,27 @@\n             \n+ //\n  var nome = \n@@ -736,156 +736,8 @@\n 1%5D;%0A\n-                Person client = new Person(nome);%0A                market.arrive(client);%0A                // System.out.println(nome + client.name);%0A\n     \n@@ -1269,21 +1269,21 @@\n ate int \n-count\n+index\n Counter \n@@ -1290,87 +1290,8 @@\n = 0;\n-%0A        private int indexQueue = (this.queue == null) ? 0 : this.queue.size();\n %0A%0A  \n@@ -1474,104 +1474,8 @@\n t%5D;%0A\n-            this.queue = new ArrayList%3CPerson%3E();%0A            this.countCounter = counterCount;%0A\n     \n@@ -1546,25 +1546,39 @@\n his.\n-queue.add(\n+counters%5BindexCounter%5D = \n person\n-)\n ;%0A  \n@@ -1696,36 +1696,28 @@\n  0; i %3C \n-this.counters.length\n+indexCounter\n ; i++) %7B\n@@ -1892,28 +1892,20 @@\n  != \n-this.counters.length\n+indexCounter\n  - 1\n@@ -2047,18 +2047,25 @@\n i %3C \n-indexQueue\n+this.queue.size()\n ; i+\n@@ -2345,32 +2345,32 @@\n unters + queue;%0A\n-\n         %7D%0A    %7D%0A\n@@ -2355,32 +2355,194 @@\n ueue;%0A        %7D%0A\n+%0A        public void print() %7B%0A            for(int i = 0; i %3C indexCounter; i++) %7B%0A                System.out.println(counters%5Bi%5D.name);%0A            %7D%0A        %7D%0A%0A\n     %7D%0A%0A    stati\n",
            "lines": "109"
        },
        {
            "label": "2025-08-24_21-43-45",
            "content": "@@ -744,19 +744,16 @@\n         \n- //\n  Person \n@@ -809,32 +809,22 @@\n .arrive(\n-new Person(nome)\n+client\n );%0A     \n@@ -1439,19 +1439,16 @@\n %0A       \n- //\n  private\n@@ -1511,24 +1511,16 @@\n size();%0A\n-        \n %0A       \n@@ -1593,33 +1593,25 @@\n ;%0A        %7D%0A\n-        \n %0A\n+\n         publ\n@@ -1804,17 +1804,9 @@\n   %7D%0A\n-        \n %0A\n+\n     \n@@ -2365,33 +2365,26 @@\n  0; i %3C \n-this.queue.size()\n+indexQueue\n ; i++) %7B\n",
            "lines": "108"
        },
        {
            "label": "2025-08-24_21-51-33",
            "content": "@@ -744,16 +744,19 @@\n         \n+ //\n  Person \n@@ -812,22 +812,32 @@\n .arrive(\n-client\n+new Person(nome)\n );%0A     \n",
            "lines": "108"
        },
        {
            "label": "2025-08-24_21-52-09",
            "content": "@@ -818,16 +818,75 @@\n lient);%0A\n+                // System.out.println(nome + client.name);%0A\n         \n@@ -942,32 +942,35 @@\n %0A               \n+ //\n  var indice = In\n@@ -997,45 +997,8 @@\n %5D);%0A\n-                market.call(indice);%0A\n     \n@@ -1064,24 +1064,27 @@\n             \n+ //\n  var indice \n@@ -1115,47 +1115,8 @@\n %5D);%0A\n-                market.finish(indice);%0A\n     \n@@ -1923,630 +1923,8 @@\n  %7D%0A%0A\n-        public void call(int index) %7B%0A            Person client = this.queue.get(0);%0A            this.queue.remove(0);%0A            %0A            this.counters%5Bindex%5D = client;%0A%0A            // for(int i = 0; i %3C this.counters.length; i++) %7B%0A            //     if(this.counters%5Bi%5D == null) %7B%0A            //        this.counters%5Bi%5D = client;%0A            //        break; %0A            //     %7D %0A            // %7D%0A        %7D%0A%0A        public Person finish(int index) %7B%0A            Person client = this.counters%5Bindex%5D;%0A%0A            this.counters%5Bindex%5D = new Person(%22cuida%22);%0A                %0A            return client;%0A        %7D%0A%0A\n     \n",
            "lines": "108"
        },
        {
            "label": "2025-08-24_22-04-24",
            "content": "@@ -1972,245 +1972,8 @@\n ) %7B%0A\n-            if(this.queue.size() %3C= 0) %7B%0A                System.out.println(%22fail: sem clientes%22);%0A            %7D else if(this.counters%5Bindex%5D != null) %7B%0A                System.out.println(%22fail: caixa ocupado%22);%0A            %7D else %7B%0A    \n     \n@@ -2019,36 +2019,32 @@\n 0);%0A            \n-    \n this.queue.remov\n@@ -2057,33 +2057,25 @@\n             \n-    %0A    \n+%0A\n             \n@@ -2104,30 +2104,16 @@\n  client;\n-%0A            %7D\n %0A%0A      \n@@ -2117,76 +2117,34 @@\n     \n- %7D%0A%0A\n      \n-   public Person finish(int index) %7B%0A            if(index %3E\n+// for(int i = 0; i %3C\n  thi\n@@ -2160,16 +2160,21 @@\n s.length\n+; i++\n ) %7B%0A    \n@@ -2185,111 +2185,68 @@\n     \n+//\n     \n-System.out.println(%22fail: caixa inexistente%22);%0A%0A                return null;%0A\n+ if(this.counters%5Bi%5D == null) %7B%0A       \n      \n+//\n        \n-%7D else if(\n+ \n this\n@@ -2260,25 +2260,22 @@\n rs%5Bi\n-ndex\n %5D =\n-= null) %7B%0A\n+ client;%0A  \n     \n@@ -2284,54 +2284,25 @@\n     \n+//\n       \n-System.out.println(%22fail: caixa vazio%22);\n+  break; \n %0A   \n@@ -2313,51 +2313,89 @@\n     \n+ //\n      \n-return null;%0A            %7D else %7B%0A    \n+%7D %0A            // %7D%0A        %7D%0A%0A        public Person finish(int index) %7B%0A\n     \n@@ -2440,25 +2440,17 @@\n index%5D;%0A\n-    %0A    \n+%0A\n         \n@@ -2481,17 +2481,28 @@\n  = n\n-ull;%0A    \n+ew Person(%22cuida%22);%0A\n     \n@@ -2518,36 +2518,32 @@\n    %0A            \n-    \n return client;%0A \n@@ -2541,30 +2541,16 @@\n client;%0A\n-            %7D%0A\n         \n",
            "lines": "131"
        },
        {
            "label": "2025-08-24_22-13-23",
            "content": "@@ -2444,17 +2444,16 @@\n (index %3E\n-=\n  this.co\n",
            "lines": "140"
        },
        {
            "label": "2025-08-24_22-15-24",
            "content": "@@ -1098,32 +1098,16 @@\n         \n- Person client =\n  market.\n@@ -1114,32 +1114,32 @@\n finish(indice);%0A\n+\n             %7D%0A  \n@@ -1213,24 +1213,25 @@\n invalido%22);%0A\n+%0A\n             \n@@ -1397,32 +1397,152 @@\n %3CPerson%3E queue;%0A\n+        private int countCounter = 0;%0A        // private int indexQueue = (this.queue == null) ? 0 : this.queue.size();%0A\n         %0A       \n@@ -1724,16 +1724,16 @@\n Count%5D;%0A\n-\n         \n@@ -1770,24 +1770,70 @@\n %3CPerson%3E();%0A\n+            this.countCounter = counterCount;%0A\n         %7D%0A  \n",
            "lines": "140"
        },
        {
            "label": "2025-08-25_08-04-18",
            "content": "import java.util.*;\n\n\nclass Shell {\n    public static void main(String[] _args) {\n        Market market = new Market(0);\n\n        while(true) {\n            var line = scanner.nextLine();\n            System.out.println(\"$\" + line);\n\n            var par = line.split(\" \");\n            var cmd = par[0];\n\n            if (cmd.equals(\"end\")) {\n                break;\n            }\n            else if (cmd.equals(\"init\")) { \n                var qtd_caixas = Integer.parseInt(par[1]);\n                market = new Market(qtd_caixas);\n            }\n            else if (cmd.equals(\"show\")) { \n                System.out.println(market.toString());\n            }\n            else if (cmd.equals(\"arrive\")) { \n                var nome = par[1];\n                Person client = new Person(nome);\n                market.arrive(client);\n            }\n            else if (cmd.equals(\"call\")) { \n                var indice = Integer.parseInt(par[1]);\n                market.call(indice);\n            }\n            else if (cmd.equals(\"finish\")) { \n                var indice = Integer.parseInt(par[1]);\n                Person client = market.finish(indice);\n            }\n            else {\n                System.out.println(\"fail: comando invalido\");\n            }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n\n    static class Market {\n        private Person[] counters;\n        private ArrayList<Person> queue;\n        \n        public boolean validateIndex(int index) {\n            return true;\n        }\n        \n        public Market(int counterCount) {\n            this.counters = new Person[counterCount];\n            this.queue = new ArrayList<Person>();\n        }\n        \n        public void arrive(Person person) {\n            this.queue.add(person);\n        }\n\n        public void call(int index) {\n            if(this.queue.size() <= 0) {\n                System.out.println(\"fail: sem clientes\");\n            } else if(this.counters[index] != null) {\n                System.out.println(\"fail: caixa ocupado\");\n            } else {\n                Person client = this.queue.get(0);\n                this.queue.remove(0);\n                \n                this.counters[index] = client;\n            }\n\n        }\n\n        public Person finish(int index) {\n            if(index >= this.counters.length) {\n                System.out.println(\"fail: caixa inexistente\");\n\n                return null;\n            } else if(this.counters[index] == null) {\n                System.out.println(\"fail: caixa vazio\");\n                return null;\n            } else {\n                Person client = this.counters[index];\n    \n                this.counters[index] = null;\n                    \n                return client;\n            }\n        }\n\n        public String toString() {\n            String counters = \"Caixas: [\";\n\n            for(int i = 0; i < this.counters.length; i++) {\n                if(this.counters[i] == null) counters += \"-----\";\n                else                         counters += this.counters[i].name;\n\n                if(i != this.counters.length - 1) counters += \", \";\n            }\n\n            counters += \"]\\n\";\n\n            String queue = \"Espera: [\";\n\n            for(int i = 0; i < this.queue.size(); i++) {\n                if(this.queue.get(i) == null) queue += \"-----\";\n                else                         queue += this.queue.get(i).name;\n\n                if(i != this.queue.size() - 1) queue += \", \";\n            }\n\n            queue += \"]\";\n\n            return counters + queue;\n        }\n    }\n\n    static class Person {\n        private String name;\n\n        public Person(String name) {\n            this.name = name;\n        }\n\n        public String getName() {\n            return this.name;\n        }\n\n        public void setName(String name) {\n            this.name = name;\n        }\n    }\n}\n",
            "lines": "136"
        }
    ]
}